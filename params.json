{"note":"Don't delete this file! It's used internally to help with page regeneration.","name":"Rlcnl","tagline":"RAIR Lab's Logically Controlled Natural Language","body":"RLCNL\r\n=====\r\n\r\nRAIR Lab's Logically Controlled Natural Language\r\n\r\n\r\nNLG Example\r\n--------------\r\nThe current version provides a way of specifying how logical functors translate into natural language.\r\nThe ```define-compositional-nlg``` operator lets one specify how functors can combine compositionally in terms of sub functors. More complex methods of combination will be built later. \r\n\r\n```lisp\r\n    (define-compositional-nlg jack () \"jack\")\r\n\r\n    (define-compositional-nlg mary () \"mary\")\r\n\r\n    (define-compositional-nlg loves (x y) x \" loves \" y)\r\n\r\n    (nlg (parse '(loves jack mary))) ==> \"JACK LOVES MARY  \"\r\n```","google":""}