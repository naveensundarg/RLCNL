{"body":"RLCNL\r\n=====\r\n\r\nRAIR Lab's Logically Controlled Natural Language\r\n\r\n\r\nNLG Example\r\n--------------\r\nThe current version provides a way of specifying how logical functors translate into natural language.\r\nThe ```define-compositional-nlg``` operator lets one specify how functors can combine compositionally in terms of sub functors. More complex methods of combination will be built later. \r\n\r\n```lisp\r\n    (define-compositional-nlg jack () \"jack\")\r\n\r\n    (define-compositional-nlg mary () \"mary\")\r\n\r\n    (define-compositional-nlg loves (x y) x \" loves \" y)\r\n\r\n    (nlg (parse '(loves jack mary))) ==> \r\n\r\n     \"JACK LOVES MARY  \"\r\n```\r\n\r\nFrom the DCEC*\r\n```lisp\r\n    (define-compositional-nlg believes (a m P)\r\n      \"Agent \" a \" perceives that \" P \" at moment \" m)\r\n\r\n    (nlg (parse '(perceives jack t1 (loves jack mary)))) ==> \r\n\r\n    \"AGENT JACK  PERCEIVES THAT JACK LOVES MARY   AT MOMENT T1  \"\r\n\r\n```","google":"","note":"Don't delete this file! It's used internally to help with page regeneration.","tagline":"RAIR Lab's Logically Controlled Natural Language","name":"Rlcnl"}